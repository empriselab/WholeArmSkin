import pickle
import matplotlib.pyplot as plt
import numpy as np
import seaborn as sns
import mpl_toolkits.axisartist as axisartist

plt.figure(figsize=(5.0, 3.5))
plt.rc('font', family='serif', size='10') 

x1 = [5360,5366,5467,5708,5806,5884,5878,5887,5898,5903,5909,5865,5884,5931,5931,5943,5939,5960,5967,6013,6044,6046,6121,6115,6147,6197,6214,6286,6315,6372,6354,6425,6395,6507,6536,6623,6707,6818,6820,6847,6894,6944,7046,7227,7292,7307,7332,7319,7394,7878,8001,8022,7934,7878,7845,7814,7701,7649,7603,7461,7295,5400,5356,5349,5366,5367
]
y1 = [0,0,0,0.0625,1.1875,1.5625,1.75,1.625,1.75,1.75,1.8125,1.8125,2.0625,2.125,2.25,2.5,2.5,2.625,2.625,2.875,3.25,3.5625,3.8125,3.9375,4.25,4.25,4.375,4.75,5.0625,5.25,5.4375,5.6875,6.0625,6.375,6.9375,7.375,7.9375,8.75,9.375,9.8125,10.3125,10.75,11.5,12.4375,14.3125,15.3125,15.1875,14.6875,15.1875,17.5,22.9375,23.5,22.4375,20.5,19.8125,18.8125,18.25,16.75,15.9375,15.4375,13.875,0.8125,0.5,0.3125,0.3125,0.5
]

x2 = [5224,5217,5225,5217,5225,5229,5246,5236,5240,5364,5414,5479,5640,5616,5642,5691,5709,5712,5730,5734,5751,5840,5866,5870,5891,5925,5928,5984,6027,6119,6236,6279,6346,6418,6475,6507,6587,6682,6782,6832,6909,6990,7104,7309,7714,7542,7490,7221,6959,6561
]
y2 = [-0.1875,0,-0.1875,-0.1875,-0.1875,-0.375,-0.1875,-0.1875,-0.1875,0,0,0.3125,0.75,1,1.1875,1.375,2.0625,2.25,2.125,2.5,2.625,2.625,2.8125,3.25,3.625,3.9375,4.5625,4.5625,5.25,5.6875,6.4375,7.25,7.6875,8.25,8.75,9.375,9.25,9.8125,9.875,10.375,10.9375,12,13.75,15.8125,18.4375,20.9375,14.8125,14.6875,11.5,9.625
]

x3 = [5278,5279,5267,5279,5277,5348,5285,5395,5483,5499,5517,5527,5528,5538,5543,5556,5581,5616,5617,5612,5593,5599,5612,5618,5641,5623,5628,5576,5597,5651,5757,5670,5548,5499,5698,5750,5751,5823,5901,6017,6053,6067,6091,6079,6044,6052,6096,6098,6156,6129,6121,6175,6136,6114,6144,6229,6366,6398,6290,6338,6387,6509,6488,6518,6532,6608,6712,6778,6795,6869,7113,6767,6436,6082,5778,5215,5223,5212,5198
]
y3 = [0,-0.3125,-0.1875,0,-0.3125,0,-0.1875,0.0625,0.5,1.125,1.1875,1.1875,1.125,1.3125,1.3125,1.375,1.5625,1.625,1.75,1.625,1.375,1.625,1.8125,2.0625,2.0625,2.0625,1.75,1.625,1.8125,2.0625,2.5,5.6875,2.625,2.25,2.0625,4.25,5.4375,5.75,7.0625,8.25,9.375,9.1875,9.4375,9.75,9.375,9.4375,8.875,9.8125,9.8125,10.75,9.875,10.0625,11.1875,10.375,9.625,11.125,12.375,13.9375,15.3125,12.25,12.4375,13.375,16.5625,15.25,15.25,15.4375,17.25,18.9375,20.0625,19.9375,22.75,17.5,14,9.25,6.8125,0.125,0.0625,0.0625,0
]

for i in range(0,len(x1)):
    x1[i] = x1[i]/1000
    x1[i] = x1[i] - 5.349
    y1[i] = y1[i] - 0
for i in range(0, len(x2)):
    x2[i] = x2[i]/1000
    x2[i] = x2[i] - 5.217
    y2[i] = y2[i] + 0.375
for i in range(0, len(x3)):
    x3[i] = x3[i]/1000
    x3[i] = x3[i] - 5.198
    y3[i] = y3[i] + 0.3125

fig = plt.figure(1)
ax = fig.add_subplot(111)

# sorted_indices = np.argsort(x1)
# x1_sorted = np.array(x1)[sorted_indices]
# y1_sorted = np.array(y1)[sorted_indices]

# coff1 = np.polyfit(x1_sorted, y1_sorted, 2)
# math1 = np.zeros(len(x1))
# for i in range(0, len(x1)):
#     math1[i] = coff1[0]*x1[i]*x1[i] + coff1[1]*x1[i] + coff1[2]
# x1 = x1[0:len(x1)-6]
# y1 = y1[0:len(y1)-6]
# math1 = math1[0:len(math1)-6]

# sorted_indices = np.argsort(x2)
# x2_sorted = np.array(x2)[sorted_indices]
# y2_sorted = np.array(y2)[sorted_indices]

# coff2 = np.polyfit(x2_sorted, y2_sorted, 2)
# math2 = np.zeros(len(x2))
# for i in range(0, len(x2)):
#     math2[i] = coff2[0]*x2[i]*x2[i] + coff2[1]*x2[i] + coff2[2]

# sorted_indices = np.argsort(x3)
# x3_sorted = np.array(x3)[sorted_indices]
# y3_sorted = np.array(y3)[sorted_indices]

# coff3 = np.polyfit(x3_sorted, y3_sorted, 2)
# math3 = np.zeros(len(x3))
# for i in range(0, len(x3)):
#     math3[i] = coff3[0]*x3[i]*x3[i] + coff3[1]*x3[i] + coff3[2]

# plt.plot(x1, math1, color = "#1b9e77")
# plt.plot(x2, math2, color = "#d95f02")
# plt.plot(x3, math3, color = "#7570b3")

plt.scatter(x1, y1, color = "#1b9e77")
plt.scatter(x2, y2, color = "#d95f02")
plt.scatter(x3, y3, color = "#7570b3")

plt.xlabel(u'Î” Capacitance (pF)')
plt.ylabel(u'Force (N)')
sns.despine()
plt.legend(['  0% Lateral Compression', '25% Lateral Compression', '50% Lateral Compression'], loc='lower center', bbox_to_anchor=(0.7, 0), frameon=False)

xbegin = 0
xend = 3.3
ybegin = 0
yend = 24
plt.tight_layout(pad = 1)
plt.xlim([xbegin, xend])
plt.ylim([ybegin, yend])

ax.plot(xend, ybegin, ls="", marker="4", ms=10, color="k", clip_on=False)
ax.plot(xbegin, yend, ls="", marker="2", ms=10, color="k", clip_on=False)

plt.show()